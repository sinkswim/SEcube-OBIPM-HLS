// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _obipm_HH_
#define _obipm_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "obipm_enabler.h"
#include "obipm_packet_switcher.h"
#include "obipm_support_logic.h"
#include "obipm_interrupt_controller.h"

namespace ap_rtl {

struct obipm : public sc_module {
    // Port declarations 19
    sc_in_clk clk;
    sc_in< sc_logic > rst;
    sc_in< sc_lv<16> > row_0_b;
    sc_in< sc_lv<16> > data_b_in;
    sc_out< sc_lv<16> > data_b_out;
    sc_out< sc_lv<6> > address_b;
    sc_out< sc_lv<1> > w_enable_b;
    sc_out< sc_lv<1> > r_enable_b;
    sc_out< sc_lv<1> > generic_enable_b;
    sc_in< sc_lv<80> > data_ip_in;
    sc_out< sc_lv<80> > data_ip_out;
    sc_in< sc_lv<30> > address_ip;
    sc_in< sc_lv<5> > w_enable_ip;
    sc_in< sc_lv<5> > r_enable_ip;
    sc_in< sc_lv<5> > generic_enable_ip;
    sc_out< sc_lv<5> > enable_ip;
    sc_out< sc_lv<5> > ack_ip;
    sc_in< sc_lv<5> > interrupt_ip;
    sc_out< sc_lv<1> > interrupt_cpu;
    sc_signal< sc_lv<1> > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;


    // Module declarations
    obipm(sc_module_name name);
    SC_HAS_PROCESS(obipm);

    ~obipm();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    obipm_enabler* StgValue_35_obipm_enabler_fu_180;
    obipm_packet_switcher* StgValue_41_obipm_packet_switcher_fu_236;
    obipm_support_logic* StgValue_61_obipm_support_logic_fu_292;
    obipm_interrupt_controller* grp_obipm_interrupt_controller_fu_348;
    sc_signal< sc_lv<1> > obipm_ssdm_thread_1_load_fu_408_p1;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > obipm_ssdm_thread_3_load_fu_416_p1;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > StgValue_35_obipm_enabler_fu_180_enable_ip;
    sc_signal< sc_logic > StgValue_35_obipm_enabler_fu_180_enable_ip_ap_vld;
    sc_signal< sc_lv<1> > StgValue_35_obipm_enabler_fu_180_transaction_r;
    sc_signal< sc_logic > StgValue_35_obipm_enabler_fu_180_transaction_r_ap_vld;
    sc_signal< sc_lv<3> > StgValue_35_obipm_enabler_fu_180_index_ip;
    sc_signal< sc_logic > StgValue_35_obipm_enabler_fu_180_index_ip_ap_vld;
    sc_signal< sc_lv<5> > StgValue_35_obipm_enabler_fu_180_ack_internal;
    sc_signal< sc_logic > StgValue_35_obipm_enabler_fu_180_ack_internal_ap_vld;
    sc_signal< sc_lv<16> > StgValue_41_obipm_packet_switcher_fu_236_data_b_out;
    sc_signal< sc_logic > StgValue_41_obipm_packet_switcher_fu_236_data_b_out_ap_vld;
    sc_signal< sc_lv<6> > StgValue_41_obipm_packet_switcher_fu_236_address_b;
    sc_signal< sc_logic > StgValue_41_obipm_packet_switcher_fu_236_address_b_ap_vld;
    sc_signal< sc_lv<1> > StgValue_41_obipm_packet_switcher_fu_236_w_enable_b;
    sc_signal< sc_logic > StgValue_41_obipm_packet_switcher_fu_236_w_enable_b_ap_vld;
    sc_signal< sc_lv<1> > StgValue_41_obipm_packet_switcher_fu_236_r_enable_b;
    sc_signal< sc_logic > StgValue_41_obipm_packet_switcher_fu_236_r_enable_b_ap_vld;
    sc_signal< sc_lv<1> > StgValue_41_obipm_packet_switcher_fu_236_generic_enable_b;
    sc_signal< sc_logic > StgValue_41_obipm_packet_switcher_fu_236_generic_enable_b_ap_vld;
    sc_signal< sc_lv<80> > StgValue_41_obipm_packet_switcher_fu_236_data_ip_out;
    sc_signal< sc_logic > StgValue_41_obipm_packet_switcher_fu_236_data_ip_out_ap_vld;
    sc_signal< sc_lv<5> > StgValue_61_obipm_support_logic_fu_292_ack_ip;
    sc_signal< sc_logic > StgValue_61_obipm_support_logic_fu_292_ack_ip_ap_vld;
    sc_signal< sc_lv<1> > StgValue_61_obipm_support_logic_fu_292_interrupt_cpu;
    sc_signal< sc_logic > StgValue_61_obipm_support_logic_fu_292_interrupt_cpu_ap_vld;
    sc_signal< sc_lv<1> > StgValue_61_obipm_support_logic_fu_292_acked;
    sc_signal< sc_logic > StgValue_61_obipm_support_logic_fu_292_acked_ap_vld;
    sc_signal< sc_lv<1> > StgValue_61_obipm_support_logic_fu_292_irq;
    sc_signal< sc_logic > StgValue_61_obipm_support_logic_fu_292_irq_ap_vld;
    sc_signal< sc_lv<1> > obipm_ssdm_thread_load_fu_404_p1;
    sc_signal< sc_lv<1> > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > ap_CS_fsm_state5;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ack_ip();
    void thread_address_b();
    void thread_ap_CS_fsm();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state5();
    void thread_data_b_out();
    void thread_data_ip_out();
    void thread_enable_ip();
    void thread_generic_enable_b();
    void thread_interrupt_cpu();
    void thread_obipm_ssdm_thread_1_load_fu_408_p1();
    void thread_obipm_ssdm_thread_3_load_fu_416_p1();
    void thread_obipm_ssdm_thread_load_fu_404_p1();
    void thread_r_enable_b();
    void thread_w_enable_b();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
