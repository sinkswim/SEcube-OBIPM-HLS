// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "obipm_packet_switcher.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const bool obipm_packet_switcher::ap_const_boolean_1 = true;
const sc_lv<80> obipm_packet_switcher::ap_const_lv80_0 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<1> obipm_packet_switcher::ap_const_lv1_0 = "0";
const sc_logic obipm_packet_switcher::ap_const_logic_0 = sc_dt::Log_0;
const sc_logic obipm_packet_switcher::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<16> obipm_packet_switcher::ap_const_lv16_0 = "0000000000000000";
const sc_lv<6> obipm_packet_switcher::ap_const_lv6_0 = "000000";
const sc_lv<1> obipm_packet_switcher::ap_const_lv1_1 = "1";
const sc_lv<4> obipm_packet_switcher::ap_const_lv4_0 = "0000";
const sc_lv<7> obipm_packet_switcher::ap_const_lv7_F = "1111";
const sc_lv<32> obipm_packet_switcher::ap_const_lv32_4F = "1001111";
const sc_lv<32> obipm_packet_switcher::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<7> obipm_packet_switcher::ap_const_lv7_4F = "1001111";
const sc_lv<80> obipm_packet_switcher::ap_const_lv80_FFFFFFFFFFFFFFFFFFFF = "11111111111111111111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<3> obipm_packet_switcher::ap_const_lv3_0 = "000";
const sc_lv<7> obipm_packet_switcher::ap_const_lv7_7A = "1111010";
const sc_lv<32> obipm_packet_switcher::ap_const_lv32_1D = "11101";
const sc_lv<5> obipm_packet_switcher::ap_const_lv5_1D = "11101";

obipm_packet_switcher::obipm_packet_switcher(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_Hi_assign_2_fu_308_p1);
    sensitive << ( index_ip );

    SC_METHOD(thread_Hi_assign_fu_320_p2);
    sensitive << ( Lo_assign_fu_312_p3 );

    SC_METHOD(thread_Lo_assign_1_fu_552_p2);
    sensitive << ( p_shl_cast_fu_536_p1 );
    sensitive << ( p_shl1_cast_fu_548_p1 );

    SC_METHOD(thread_Lo_assign_fu_312_p3);
    sensitive << ( index_ip );

    SC_METHOD(thread_address_b);
    sensitive << ( val_V_read_fu_294_p2 );
    sensitive << ( v_V_1_fu_610_p1 );

    SC_METHOD(thread_address_b_ap_vld);

    SC_METHOD(thread_data_b_out);
    sensitive << ( val_V_read_fu_294_p2 );
    sensitive << ( v_V_fu_416_p1 );

    SC_METHOD(thread_data_b_out_ap_vld);

    SC_METHOD(thread_data_ip_out);
    sensitive << ( val_V_read_fu_294_p2 );
    sensitive << ( p_Result_1_fu_521_p2 );

    SC_METHOD(thread_data_ip_out_ap_vld);

    SC_METHOD(thread_generic_enable_b);
    sensitive << ( val_V_read_fu_294_p2 );
    sensitive << ( val_V_4_read_fu_300_p2 );
    sensitive << ( v_V_4_fu_633_p3 );

    SC_METHOD(thread_generic_enable_b_ap_vld);

    SC_METHOD(thread_loc_V_fu_421_p1);
    sensitive << ( data_b_in );

    SC_METHOD(thread_p_Result_1_fu_521_p2);
    sensitive << ( tmp_27_fu_495_p3 );
    sensitive << ( p_demorgan_fu_515_p2 );

    SC_METHOD(thread_p_Result_s_fu_410_p2);
    sensitive << ( tmp_12_fu_398_p2 );
    sensitive << ( tmp_13_fu_404_p2 );

    SC_METHOD(thread_p_demorgan_fu_515_p2);
    sensitive << ( tmp_28_fu_503_p2 );
    sensitive << ( tmp_29_fu_509_p2 );

    SC_METHOD(thread_p_shl1_cast_fu_548_p1);
    sensitive << ( p_shl1_fu_540_p3 );

    SC_METHOD(thread_p_shl1_fu_540_p3);
    sensitive << ( index_ip );

    SC_METHOD(thread_p_shl_cast_fu_536_p1);
    sensitive << ( p_shl_fu_528_p3 );

    SC_METHOD(thread_p_shl_fu_528_p3);
    sensitive << ( index_ip );

    SC_METHOD(thread_r_enable_b);
    sensitive << ( val_V_read_fu_294_p2 );
    sensitive << ( v_V_3_fu_624_p3 );

    SC_METHOD(thread_r_enable_b_ap_vld);

    SC_METHOD(thread_tmp_10_fu_390_p1);
    sensitive << ( tmp_8_fu_376_p3 );

    SC_METHOD(thread_tmp_11_fu_394_p1);
    sensitive << ( tmp_9_fu_384_p2 );

    SC_METHOD(thread_tmp_12_fu_398_p2);
    sensitive << ( tmp_7_fu_368_p3 );
    sensitive << ( tmp_10_fu_390_p1 );

    SC_METHOD(thread_tmp_13_fu_404_p2);
    sensitive << ( tmp_11_fu_394_p1 );

    SC_METHOD(thread_tmp_16_fu_425_p2);
    sensitive << ( val_V_read_fu_294_p2 );
    sensitive << ( Lo_assign_fu_312_p3 );
    sensitive << ( Hi_assign_fu_320_p2 );

    SC_METHOD(thread_tmp_17_fu_431_p2);
    sensitive << ( Lo_assign_fu_312_p3 );

    SC_METHOD(thread_tmp_18_fu_437_p3);
    sensitive << ( Lo_assign_fu_312_p3 );
    sensitive << ( Hi_assign_fu_320_p2 );
    sensitive << ( tmp_16_fu_425_p2 );

    SC_METHOD(thread_tmp_19_fu_445_p3);
    sensitive << ( Lo_assign_fu_312_p3 );
    sensitive << ( Hi_assign_fu_320_p2 );
    sensitive << ( tmp_16_fu_425_p2 );

    SC_METHOD(thread_tmp_1_fu_326_p2);
    sensitive << ( val_V_read_fu_294_p2 );
    sensitive << ( Lo_assign_fu_312_p3 );
    sensitive << ( Hi_assign_fu_320_p2 );

    SC_METHOD(thread_tmp_20_fu_453_p3);
    sensitive << ( Lo_assign_fu_312_p3 );
    sensitive << ( tmp_16_fu_425_p2 );
    sensitive << ( tmp_17_fu_431_p2 );

    SC_METHOD(thread_tmp_21_fu_461_p2);
    sensitive << ( tmp_18_fu_437_p3 );

    SC_METHOD(thread_tmp_22_fu_467_p1);
    sensitive << ( tmp_20_fu_453_p3 );

    SC_METHOD(thread_tmp_23_fu_471_p1);
    sensitive << ( tmp_19_fu_445_p3 );

    SC_METHOD(thread_tmp_24_fu_475_p1);
    sensitive << ( tmp_21_fu_461_p2 );

    SC_METHOD(thread_tmp_25_fu_479_p2);
    sensitive << ( loc_V_fu_421_p1 );
    sensitive << ( tmp_22_fu_467_p1 );

    SC_METHOD(thread_tmp_26_fu_485_p4);
    sensitive << ( tmp_25_fu_479_p2 );

    SC_METHOD(thread_tmp_27_fu_495_p3);
    sensitive << ( tmp_16_fu_425_p2 );
    sensitive << ( tmp_25_fu_479_p2 );
    sensitive << ( tmp_26_fu_485_p4 );

    SC_METHOD(thread_tmp_28_fu_503_p2);
    sensitive << ( tmp_23_fu_471_p1 );

    SC_METHOD(thread_tmp_29_fu_509_p2);
    sensitive << ( tmp_24_fu_475_p1 );

    SC_METHOD(thread_tmp_2_fu_332_p4);
    sensitive << ( data_ip_in );

    SC_METHOD(thread_tmp_31_fu_558_p2);
    sensitive << ( val_V_read_fu_294_p2 );
    sensitive << ( Lo_assign_1_fu_552_p2 );

    SC_METHOD(thread_tmp_32_fu_564_p1);
    sensitive << ( Lo_assign_1_fu_552_p2 );

    SC_METHOD(thread_tmp_33_fu_568_p4);
    sensitive << ( address_ip );

    SC_METHOD(thread_tmp_34_fu_578_p2);
    sensitive << ( tmp_32_fu_564_p1 );

    SC_METHOD(thread_tmp_35_fu_584_p3);
    sensitive << ( address_ip );
    sensitive << ( tmp_31_fu_558_p2 );
    sensitive << ( tmp_33_fu_568_p4 );

    SC_METHOD(thread_tmp_36_fu_592_p3);
    sensitive << ( tmp_32_fu_564_p1 );
    sensitive << ( tmp_31_fu_558_p2 );
    sensitive << ( tmp_34_fu_578_p2 );

    SC_METHOD(thread_tmp_37_fu_600_p1);
    sensitive << ( tmp_36_fu_592_p3 );

    SC_METHOD(thread_tmp_38_fu_604_p2);
    sensitive << ( tmp_35_fu_584_p3 );
    sensitive << ( tmp_37_fu_600_p1 );

    SC_METHOD(thread_tmp_3_fu_342_p2);
    sensitive << ( Lo_assign_fu_312_p3 );
    sensitive << ( Hi_assign_fu_320_p2 );

    SC_METHOD(thread_tmp_4_fu_348_p2);
    sensitive << ( Lo_assign_fu_312_p3 );

    SC_METHOD(thread_tmp_5_fu_354_p2);
    sensitive << ( Lo_assign_fu_312_p3 );
    sensitive << ( Hi_assign_fu_320_p2 );

    SC_METHOD(thread_tmp_6_fu_360_p3);
    sensitive << ( tmp_1_fu_326_p2 );
    sensitive << ( tmp_3_fu_342_p2 );
    sensitive << ( tmp_5_fu_354_p2 );

    SC_METHOD(thread_tmp_7_fu_368_p3);
    sensitive << ( data_ip_in );
    sensitive << ( tmp_1_fu_326_p2 );
    sensitive << ( tmp_2_fu_332_p4 );

    SC_METHOD(thread_tmp_8_fu_376_p3);
    sensitive << ( Lo_assign_fu_312_p3 );
    sensitive << ( tmp_1_fu_326_p2 );
    sensitive << ( tmp_4_fu_348_p2 );

    SC_METHOD(thread_tmp_9_fu_384_p2);
    sensitive << ( tmp_6_fu_360_p3 );

    SC_METHOD(thread_v_V_1_fu_610_p1);
    sensitive << ( tmp_38_fu_604_p2 );

    SC_METHOD(thread_v_V_2_fu_615_p3);
    sensitive << ( w_enable_ip );
    sensitive << ( Hi_assign_2_fu_308_p1 );

    SC_METHOD(thread_v_V_3_fu_624_p3);
    sensitive << ( r_enable_ip );
    sensitive << ( Hi_assign_2_fu_308_p1 );

    SC_METHOD(thread_v_V_4_fu_633_p3);
    sensitive << ( generic_enable_ip );
    sensitive << ( Hi_assign_2_fu_308_p1 );

    SC_METHOD(thread_v_V_fu_416_p1);
    sensitive << ( p_Result_s_fu_410_p2 );

    SC_METHOD(thread_val_V_4_read_fu_300_p2);
    sensitive << ( interrupt_internal );
    sensitive << ( val_V_read_fu_294_p2 );

    SC_METHOD(thread_val_V_read_fu_294_p2);
    sensitive << ( transaction_r );

    SC_METHOD(thread_w_enable_b);
    sensitive << ( val_V_read_fu_294_p2 );
    sensitive << ( val_V_4_read_fu_300_p2 );
    sensitive << ( v_V_2_fu_615_p3 );

    SC_METHOD(thread_w_enable_b_ap_vld);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "obipm_packet_switcher_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, data_b_in, "(port)data_b_in");
    sc_trace(mVcdFile, data_b_out, "(port)data_b_out");
    sc_trace(mVcdFile, data_b_out_ap_vld, "(port)data_b_out_ap_vld");
    sc_trace(mVcdFile, address_b, "(port)address_b");
    sc_trace(mVcdFile, address_b_ap_vld, "(port)address_b_ap_vld");
    sc_trace(mVcdFile, w_enable_b, "(port)w_enable_b");
    sc_trace(mVcdFile, w_enable_b_ap_vld, "(port)w_enable_b_ap_vld");
    sc_trace(mVcdFile, r_enable_b, "(port)r_enable_b");
    sc_trace(mVcdFile, r_enable_b_ap_vld, "(port)r_enable_b_ap_vld");
    sc_trace(mVcdFile, generic_enable_b, "(port)generic_enable_b");
    sc_trace(mVcdFile, generic_enable_b_ap_vld, "(port)generic_enable_b_ap_vld");
    sc_trace(mVcdFile, data_ip_in, "(port)data_ip_in");
    sc_trace(mVcdFile, data_ip_out, "(port)data_ip_out");
    sc_trace(mVcdFile, data_ip_out_ap_vld, "(port)data_ip_out_ap_vld");
    sc_trace(mVcdFile, address_ip, "(port)address_ip");
    sc_trace(mVcdFile, w_enable_ip, "(port)w_enable_ip");
    sc_trace(mVcdFile, r_enable_ip, "(port)r_enable_ip");
    sc_trace(mVcdFile, generic_enable_ip, "(port)generic_enable_ip");
    sc_trace(mVcdFile, transaction_r, "(port)transaction_r");
    sc_trace(mVcdFile, index_ip, "(port)index_ip");
    sc_trace(mVcdFile, interrupt_internal, "(port)interrupt_internal");
    sc_trace(mVcdFile, index_interrupt, "(port)index_interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, val_V_read_fu_294_p2, "val_V_read_fu_294_p2");
    sc_trace(mVcdFile, val_V_4_read_fu_300_p2, "val_V_4_read_fu_300_p2");
    sc_trace(mVcdFile, p_Result_1_fu_521_p2, "p_Result_1_fu_521_p2");
    sc_trace(mVcdFile, v_V_fu_416_p1, "v_V_fu_416_p1");
    sc_trace(mVcdFile, v_V_1_fu_610_p1, "v_V_1_fu_610_p1");
    sc_trace(mVcdFile, v_V_2_fu_615_p3, "v_V_2_fu_615_p3");
    sc_trace(mVcdFile, v_V_3_fu_624_p3, "v_V_3_fu_624_p3");
    sc_trace(mVcdFile, v_V_4_fu_633_p3, "v_V_4_fu_633_p3");
    sc_trace(mVcdFile, Lo_assign_fu_312_p3, "Lo_assign_fu_312_p3");
    sc_trace(mVcdFile, Hi_assign_fu_320_p2, "Hi_assign_fu_320_p2");
    sc_trace(mVcdFile, tmp_1_fu_326_p2, "tmp_1_fu_326_p2");
    sc_trace(mVcdFile, tmp_3_fu_342_p2, "tmp_3_fu_342_p2");
    sc_trace(mVcdFile, tmp_5_fu_354_p2, "tmp_5_fu_354_p2");
    sc_trace(mVcdFile, tmp_2_fu_332_p4, "tmp_2_fu_332_p4");
    sc_trace(mVcdFile, tmp_4_fu_348_p2, "tmp_4_fu_348_p2");
    sc_trace(mVcdFile, tmp_6_fu_360_p3, "tmp_6_fu_360_p3");
    sc_trace(mVcdFile, tmp_8_fu_376_p3, "tmp_8_fu_376_p3");
    sc_trace(mVcdFile, tmp_9_fu_384_p2, "tmp_9_fu_384_p2");
    sc_trace(mVcdFile, tmp_7_fu_368_p3, "tmp_7_fu_368_p3");
    sc_trace(mVcdFile, tmp_10_fu_390_p1, "tmp_10_fu_390_p1");
    sc_trace(mVcdFile, tmp_11_fu_394_p1, "tmp_11_fu_394_p1");
    sc_trace(mVcdFile, tmp_12_fu_398_p2, "tmp_12_fu_398_p2");
    sc_trace(mVcdFile, tmp_13_fu_404_p2, "tmp_13_fu_404_p2");
    sc_trace(mVcdFile, p_Result_s_fu_410_p2, "p_Result_s_fu_410_p2");
    sc_trace(mVcdFile, tmp_16_fu_425_p2, "tmp_16_fu_425_p2");
    sc_trace(mVcdFile, tmp_17_fu_431_p2, "tmp_17_fu_431_p2");
    sc_trace(mVcdFile, tmp_18_fu_437_p3, "tmp_18_fu_437_p3");
    sc_trace(mVcdFile, tmp_20_fu_453_p3, "tmp_20_fu_453_p3");
    sc_trace(mVcdFile, tmp_19_fu_445_p3, "tmp_19_fu_445_p3");
    sc_trace(mVcdFile, tmp_21_fu_461_p2, "tmp_21_fu_461_p2");
    sc_trace(mVcdFile, loc_V_fu_421_p1, "loc_V_fu_421_p1");
    sc_trace(mVcdFile, tmp_22_fu_467_p1, "tmp_22_fu_467_p1");
    sc_trace(mVcdFile, tmp_25_fu_479_p2, "tmp_25_fu_479_p2");
    sc_trace(mVcdFile, tmp_26_fu_485_p4, "tmp_26_fu_485_p4");
    sc_trace(mVcdFile, tmp_23_fu_471_p1, "tmp_23_fu_471_p1");
    sc_trace(mVcdFile, tmp_24_fu_475_p1, "tmp_24_fu_475_p1");
    sc_trace(mVcdFile, tmp_28_fu_503_p2, "tmp_28_fu_503_p2");
    sc_trace(mVcdFile, tmp_29_fu_509_p2, "tmp_29_fu_509_p2");
    sc_trace(mVcdFile, tmp_27_fu_495_p3, "tmp_27_fu_495_p3");
    sc_trace(mVcdFile, p_demorgan_fu_515_p2, "p_demorgan_fu_515_p2");
    sc_trace(mVcdFile, p_shl_fu_528_p3, "p_shl_fu_528_p3");
    sc_trace(mVcdFile, p_shl1_fu_540_p3, "p_shl1_fu_540_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_536_p1, "p_shl_cast_fu_536_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_548_p1, "p_shl1_cast_fu_548_p1");
    sc_trace(mVcdFile, Lo_assign_1_fu_552_p2, "Lo_assign_1_fu_552_p2");
    sc_trace(mVcdFile, tmp_32_fu_564_p1, "tmp_32_fu_564_p1");
    sc_trace(mVcdFile, tmp_31_fu_558_p2, "tmp_31_fu_558_p2");
    sc_trace(mVcdFile, tmp_33_fu_568_p4, "tmp_33_fu_568_p4");
    sc_trace(mVcdFile, tmp_34_fu_578_p2, "tmp_34_fu_578_p2");
    sc_trace(mVcdFile, tmp_36_fu_592_p3, "tmp_36_fu_592_p3");
    sc_trace(mVcdFile, tmp_35_fu_584_p3, "tmp_35_fu_584_p3");
    sc_trace(mVcdFile, tmp_37_fu_600_p1, "tmp_37_fu_600_p1");
    sc_trace(mVcdFile, tmp_38_fu_604_p2, "tmp_38_fu_604_p2");
    sc_trace(mVcdFile, Hi_assign_2_fu_308_p1, "Hi_assign_2_fu_308_p1");
#endif

    }
}

obipm_packet_switcher::~obipm_packet_switcher() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void obipm_packet_switcher::thread_Hi_assign_2_fu_308_p1() {
    Hi_assign_2_fu_308_p1 = esl_zext<32,3>(index_ip.read());
}

void obipm_packet_switcher::thread_Hi_assign_fu_320_p2() {
    Hi_assign_fu_320_p2 = (Lo_assign_fu_312_p3.read() | ap_const_lv7_F);
}

void obipm_packet_switcher::thread_Lo_assign_1_fu_552_p2() {
    Lo_assign_1_fu_552_p2 = (!p_shl_cast_fu_536_p1.read().is_01() || !p_shl1_cast_fu_548_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(p_shl_cast_fu_536_p1.read()) - sc_biguint<7>(p_shl1_cast_fu_548_p1.read()));
}

void obipm_packet_switcher::thread_Lo_assign_fu_312_p3() {
    Lo_assign_fu_312_p3 = esl_concat<3,4>(index_ip.read(), ap_const_lv4_0);
}

void obipm_packet_switcher::thread_address_b() {
    if (!esl_seteq<1,1,1>(val_V_read_fu_294_p2.read(), ap_const_lv1_0)) {
        address_b = v_V_1_fu_610_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        address_b = ap_const_lv6_0;
    } else {
        address_b = "XXXXXX";
    }
}

void obipm_packet_switcher::thread_address_b_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        address_b_ap_vld = ap_const_logic_1;
    } else {
        address_b_ap_vld = ap_const_logic_0;
    }
}

void obipm_packet_switcher::thread_data_b_out() {
    if (!esl_seteq<1,1,1>(val_V_read_fu_294_p2.read(), ap_const_lv1_0)) {
        data_b_out = v_V_fu_416_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        data_b_out = ap_const_lv16_0;
    } else {
        data_b_out =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void obipm_packet_switcher::thread_data_b_out_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        data_b_out_ap_vld = ap_const_logic_1;
    } else {
        data_b_out_ap_vld = ap_const_logic_0;
    }
}

void obipm_packet_switcher::thread_data_ip_out() {
    if (!esl_seteq<1,1,1>(val_V_read_fu_294_p2.read(), ap_const_lv1_0)) {
        data_ip_out = p_Result_1_fu_521_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        data_ip_out = ap_const_lv80_0;
    } else {
        data_ip_out =  (sc_lv<80>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void obipm_packet_switcher::thread_data_ip_out_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        data_ip_out_ap_vld = ap_const_logic_1;
    } else {
        data_ip_out_ap_vld = ap_const_logic_0;
    }
}

void obipm_packet_switcher::thread_generic_enable_b() {
    if (!esl_seteq<1,1,1>(val_V_read_fu_294_p2.read(), ap_const_lv1_0)) {
        generic_enable_b = v_V_4_fu_633_p3.read();
    } else if ((esl_seteq<1,1,1>(val_V_read_fu_294_p2.read(), ap_const_lv1_0) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, val_V_4_read_fu_300_p2.read()))) {
        generic_enable_b = ap_const_lv1_1;
    } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        generic_enable_b = ap_const_lv1_0;
    } else {
        generic_enable_b =  (sc_lv<1>) ("X");
    }
}

void obipm_packet_switcher::thread_generic_enable_b_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        generic_enable_b_ap_vld = ap_const_logic_1;
    } else {
        generic_enable_b_ap_vld = ap_const_logic_0;
    }
}

void obipm_packet_switcher::thread_loc_V_fu_421_p1() {
    loc_V_fu_421_p1 = esl_zext<80,16>(data_b_in.read());
}

void obipm_packet_switcher::thread_p_Result_1_fu_521_p2() {
    p_Result_1_fu_521_p2 = (tmp_27_fu_495_p3.read() & p_demorgan_fu_515_p2.read());
}

void obipm_packet_switcher::thread_p_Result_s_fu_410_p2() {
    p_Result_s_fu_410_p2 = (tmp_12_fu_398_p2.read() & tmp_13_fu_404_p2.read());
}

void obipm_packet_switcher::thread_p_demorgan_fu_515_p2() {
    p_demorgan_fu_515_p2 = (tmp_28_fu_503_p2.read() & tmp_29_fu_509_p2.read());
}

void obipm_packet_switcher::thread_p_shl1_cast_fu_548_p1() {
    p_shl1_cast_fu_548_p1 = esl_zext<7,4>(p_shl1_fu_540_p3.read());
}

void obipm_packet_switcher::thread_p_shl1_fu_540_p3() {
    p_shl1_fu_540_p3 = esl_concat<3,1>(index_ip.read(), ap_const_lv1_0);
}

void obipm_packet_switcher::thread_p_shl_cast_fu_536_p1() {
    p_shl_cast_fu_536_p1 = esl_zext<7,6>(p_shl_fu_528_p3.read());
}

void obipm_packet_switcher::thread_p_shl_fu_528_p3() {
    p_shl_fu_528_p3 = esl_concat<3,3>(index_ip.read(), ap_const_lv3_0);
}

void obipm_packet_switcher::thread_r_enable_b() {
    if (!esl_seteq<1,1,1>(val_V_read_fu_294_p2.read(), ap_const_lv1_0)) {
        r_enable_b = v_V_3_fu_624_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        r_enable_b = ap_const_lv1_0;
    } else {
        r_enable_b =  (sc_lv<1>) ("X");
    }
}

void obipm_packet_switcher::thread_r_enable_b_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        r_enable_b_ap_vld = ap_const_logic_1;
    } else {
        r_enable_b_ap_vld = ap_const_logic_0;
    }
}

void obipm_packet_switcher::thread_tmp_10_fu_390_p1() {
    tmp_10_fu_390_p1 = esl_zext<80,7>(tmp_8_fu_376_p3.read());
}

void obipm_packet_switcher::thread_tmp_11_fu_394_p1() {
    tmp_11_fu_394_p1 = esl_zext<80,7>(tmp_9_fu_384_p2.read());
}

void obipm_packet_switcher::thread_tmp_12_fu_398_p2() {
    tmp_12_fu_398_p2 = (!tmp_10_fu_390_p1.read().is_01())? sc_lv<80>(): tmp_7_fu_368_p3.read() >> (unsigned short)tmp_10_fu_390_p1.read().to_uint();
}

void obipm_packet_switcher::thread_tmp_13_fu_404_p2() {
    tmp_13_fu_404_p2 = (!tmp_11_fu_394_p1.read().is_01())? sc_lv<80>(): ap_const_lv80_FFFFFFFFFFFFFFFFFFFF >> (unsigned short)tmp_11_fu_394_p1.read().to_uint();
}

void obipm_packet_switcher::thread_tmp_16_fu_425_p2() {
    tmp_16_fu_425_p2 = (!Lo_assign_fu_312_p3.read().is_01() || !Hi_assign_fu_320_p2.read().is_01())? sc_lv<1>(): (sc_biguint<7>(Lo_assign_fu_312_p3.read()) > sc_biguint<7>(Hi_assign_fu_320_p2.read()));
}

void obipm_packet_switcher::thread_tmp_17_fu_431_p2() {
    tmp_17_fu_431_p2 = (!ap_const_lv7_4F.is_01() || !Lo_assign_fu_312_p3.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_4F) - sc_biguint<7>(Lo_assign_fu_312_p3.read()));
}

void obipm_packet_switcher::thread_tmp_18_fu_437_p3() {
    tmp_18_fu_437_p3 = (!tmp_16_fu_425_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_16_fu_425_p2.read()[0].to_bool())? Lo_assign_fu_312_p3.read(): Hi_assign_fu_320_p2.read());
}

void obipm_packet_switcher::thread_tmp_19_fu_445_p3() {
    tmp_19_fu_445_p3 = (!tmp_16_fu_425_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_16_fu_425_p2.read()[0].to_bool())? Hi_assign_fu_320_p2.read(): Lo_assign_fu_312_p3.read());
}

void obipm_packet_switcher::thread_tmp_1_fu_326_p2() {
    tmp_1_fu_326_p2 = (!Lo_assign_fu_312_p3.read().is_01() || !Hi_assign_fu_320_p2.read().is_01())? sc_lv<1>(): (sc_biguint<7>(Lo_assign_fu_312_p3.read()) > sc_biguint<7>(Hi_assign_fu_320_p2.read()));
}

void obipm_packet_switcher::thread_tmp_20_fu_453_p3() {
    tmp_20_fu_453_p3 = (!tmp_16_fu_425_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_16_fu_425_p2.read()[0].to_bool())? tmp_17_fu_431_p2.read(): Lo_assign_fu_312_p3.read());
}

void obipm_packet_switcher::thread_tmp_21_fu_461_p2() {
    tmp_21_fu_461_p2 = (!ap_const_lv7_4F.is_01() || !tmp_18_fu_437_p3.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_4F) - sc_biguint<7>(tmp_18_fu_437_p3.read()));
}

void obipm_packet_switcher::thread_tmp_22_fu_467_p1() {
    tmp_22_fu_467_p1 = esl_zext<80,7>(tmp_20_fu_453_p3.read());
}

void obipm_packet_switcher::thread_tmp_23_fu_471_p1() {
    tmp_23_fu_471_p1 = esl_zext<80,7>(tmp_19_fu_445_p3.read());
}

void obipm_packet_switcher::thread_tmp_24_fu_475_p1() {
    tmp_24_fu_475_p1 = esl_zext<80,7>(tmp_21_fu_461_p2.read());
}

void obipm_packet_switcher::thread_tmp_25_fu_479_p2() {
    tmp_25_fu_479_p2 = (!tmp_22_fu_467_p1.read().is_01())? sc_lv<80>(): loc_V_fu_421_p1.read() << (unsigned short)tmp_22_fu_467_p1.read().to_uint();
}

void obipm_packet_switcher::thread_tmp_26_fu_485_p4() {
    tmp_26_fu_485_p4 = tmp_25_fu_479_p2.read().range(0, 79);
}

void obipm_packet_switcher::thread_tmp_27_fu_495_p3() {
    tmp_27_fu_495_p3 = (!tmp_16_fu_425_p2.read()[0].is_01())? sc_lv<80>(): ((tmp_16_fu_425_p2.read()[0].to_bool())? tmp_26_fu_485_p4.read(): tmp_25_fu_479_p2.read());
}

void obipm_packet_switcher::thread_tmp_28_fu_503_p2() {
    tmp_28_fu_503_p2 = (!tmp_23_fu_471_p1.read().is_01())? sc_lv<80>(): ap_const_lv80_FFFFFFFFFFFFFFFFFFFF << (unsigned short)tmp_23_fu_471_p1.read().to_uint();
}

void obipm_packet_switcher::thread_tmp_29_fu_509_p2() {
    tmp_29_fu_509_p2 = (!tmp_24_fu_475_p1.read().is_01())? sc_lv<80>(): ap_const_lv80_FFFFFFFFFFFFFFFFFFFF >> (unsigned short)tmp_24_fu_475_p1.read().to_uint();
}

void obipm_packet_switcher::thread_tmp_2_fu_332_p4() {
    tmp_2_fu_332_p4 = data_ip_in.read().range(0, 79);
}

void obipm_packet_switcher::thread_tmp_31_fu_558_p2() {
    tmp_31_fu_558_p2 = (!Lo_assign_1_fu_552_p2.read().is_01() || !ap_const_lv7_7A.is_01())? sc_lv<1>(): (sc_biguint<7>(Lo_assign_1_fu_552_p2.read()) > sc_biguint<7>(ap_const_lv7_7A));
}

void obipm_packet_switcher::thread_tmp_32_fu_564_p1() {
    tmp_32_fu_564_p1 = Lo_assign_1_fu_552_p2.read().range(5-1, 0);
}

void obipm_packet_switcher::thread_tmp_33_fu_568_p4() {
    tmp_33_fu_568_p4 = address_ip.read().range(0, 29);
}

void obipm_packet_switcher::thread_tmp_34_fu_578_p2() {
    tmp_34_fu_578_p2 = (!ap_const_lv5_1D.is_01() || !tmp_32_fu_564_p1.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_1D) - sc_biguint<5>(tmp_32_fu_564_p1.read()));
}

void obipm_packet_switcher::thread_tmp_35_fu_584_p3() {
    tmp_35_fu_584_p3 = (!tmp_31_fu_558_p2.read()[0].is_01())? sc_lv<30>(): ((tmp_31_fu_558_p2.read()[0].to_bool())? tmp_33_fu_568_p4.read(): address_ip.read());
}

void obipm_packet_switcher::thread_tmp_36_fu_592_p3() {
    tmp_36_fu_592_p3 = (!tmp_31_fu_558_p2.read()[0].is_01())? sc_lv<5>(): ((tmp_31_fu_558_p2.read()[0].to_bool())? tmp_34_fu_578_p2.read(): tmp_32_fu_564_p1.read());
}

void obipm_packet_switcher::thread_tmp_37_fu_600_p1() {
    tmp_37_fu_600_p1 = esl_zext<30,5>(tmp_36_fu_592_p3.read());
}

void obipm_packet_switcher::thread_tmp_38_fu_604_p2() {
    tmp_38_fu_604_p2 = (!tmp_37_fu_600_p1.read().is_01())? sc_lv<30>(): tmp_35_fu_584_p3.read() >> (unsigned short)tmp_37_fu_600_p1.read().to_uint();
}

void obipm_packet_switcher::thread_tmp_3_fu_342_p2() {
    tmp_3_fu_342_p2 = (!Lo_assign_fu_312_p3.read().is_01() || !Hi_assign_fu_320_p2.read().is_01())? sc_lv<7>(): (sc_biguint<7>(Lo_assign_fu_312_p3.read()) - sc_biguint<7>(Hi_assign_fu_320_p2.read()));
}

void obipm_packet_switcher::thread_tmp_4_fu_348_p2() {
    tmp_4_fu_348_p2 = (!ap_const_lv7_4F.is_01() || !Lo_assign_fu_312_p3.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_4F) - sc_biguint<7>(Lo_assign_fu_312_p3.read()));
}

void obipm_packet_switcher::thread_tmp_5_fu_354_p2() {
    tmp_5_fu_354_p2 = (!Hi_assign_fu_320_p2.read().is_01() || !Lo_assign_fu_312_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(Hi_assign_fu_320_p2.read()) - sc_biguint<7>(Lo_assign_fu_312_p3.read()));
}

void obipm_packet_switcher::thread_tmp_6_fu_360_p3() {
    tmp_6_fu_360_p3 = (!tmp_1_fu_326_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_1_fu_326_p2.read()[0].to_bool())? tmp_3_fu_342_p2.read(): tmp_5_fu_354_p2.read());
}

void obipm_packet_switcher::thread_tmp_7_fu_368_p3() {
    tmp_7_fu_368_p3 = (!tmp_1_fu_326_p2.read()[0].is_01())? sc_lv<80>(): ((tmp_1_fu_326_p2.read()[0].to_bool())? tmp_2_fu_332_p4.read(): data_ip_in.read());
}

void obipm_packet_switcher::thread_tmp_8_fu_376_p3() {
    tmp_8_fu_376_p3 = (!tmp_1_fu_326_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_1_fu_326_p2.read()[0].to_bool())? tmp_4_fu_348_p2.read(): Lo_assign_fu_312_p3.read());
}

void obipm_packet_switcher::thread_tmp_9_fu_384_p2() {
    tmp_9_fu_384_p2 = (!ap_const_lv7_4F.is_01() || !tmp_6_fu_360_p3.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_4F) - sc_biguint<7>(tmp_6_fu_360_p3.read()));
}

void obipm_packet_switcher::thread_v_V_1_fu_610_p1() {
    v_V_1_fu_610_p1 = tmp_38_fu_604_p2.read().range(6-1, 0);
}

void obipm_packet_switcher::thread_v_V_2_fu_615_p3() {
    v_V_2_fu_615_p3 = (!Hi_assign_2_fu_308_p1.read().is_01() || sc_biguint<32>(Hi_assign_2_fu_308_p1.read()).to_uint() >= 5)? sc_lv<1>(): w_enable_ip.read().range(sc_biguint<32>(Hi_assign_2_fu_308_p1.read()).to_uint(), sc_biguint<32>(Hi_assign_2_fu_308_p1.read()).to_uint());
}

void obipm_packet_switcher::thread_v_V_3_fu_624_p3() {
    v_V_3_fu_624_p3 = (!Hi_assign_2_fu_308_p1.read().is_01() || sc_biguint<32>(Hi_assign_2_fu_308_p1.read()).to_uint() >= 5)? sc_lv<1>(): r_enable_ip.read().range(sc_biguint<32>(Hi_assign_2_fu_308_p1.read()).to_uint(), sc_biguint<32>(Hi_assign_2_fu_308_p1.read()).to_uint());
}

void obipm_packet_switcher::thread_v_V_4_fu_633_p3() {
    v_V_4_fu_633_p3 = (!Hi_assign_2_fu_308_p1.read().is_01() || sc_biguint<32>(Hi_assign_2_fu_308_p1.read()).to_uint() >= 5)? sc_lv<1>(): generic_enable_ip.read().range(sc_biguint<32>(Hi_assign_2_fu_308_p1.read()).to_uint(), sc_biguint<32>(Hi_assign_2_fu_308_p1.read()).to_uint());
}

void obipm_packet_switcher::thread_v_V_fu_416_p1() {
    v_V_fu_416_p1 = p_Result_s_fu_410_p2.read().range(16-1, 0);
}

void obipm_packet_switcher::thread_val_V_4_read_fu_300_p2() {
    val_V_4_read_fu_300_p2 = interrupt_internal.read();
}

void obipm_packet_switcher::thread_val_V_read_fu_294_p2() {
    val_V_read_fu_294_p2 = transaction_r.read();
}

void obipm_packet_switcher::thread_w_enable_b() {
    if (!esl_seteq<1,1,1>(val_V_read_fu_294_p2.read(), ap_const_lv1_0)) {
        w_enable_b = v_V_2_fu_615_p3.read();
    } else if ((esl_seteq<1,1,1>(val_V_read_fu_294_p2.read(), ap_const_lv1_0) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, val_V_4_read_fu_300_p2.read()))) {
        w_enable_b = ap_const_lv1_1;
    } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        w_enable_b = ap_const_lv1_0;
    } else {
        w_enable_b =  (sc_lv<1>) ("X");
    }
}

void obipm_packet_switcher::thread_w_enable_b_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        w_enable_b_ap_vld = ap_const_logic_1;
    } else {
        w_enable_b_ap_vld = ap_const_logic_0;
    }
}

}

