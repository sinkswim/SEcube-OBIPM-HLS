// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _obipm_enabler_HH_
#define _obipm_enabler_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct obipm_enabler : public sc_module {
    // Port declarations 9
    sc_in< sc_lv<16> > row_0_b;
    sc_out< sc_lv<5> > enable_ip;
    sc_out< sc_logic > enable_ip_ap_vld;
    sc_out< sc_lv<1> > transaction_r;
    sc_out< sc_logic > transaction_r_ap_vld;
    sc_out< sc_lv<3> > index_ip;
    sc_out< sc_logic > index_ip_ap_vld;
    sc_out< sc_lv<5> > ack_internal;
    sc_out< sc_logic > ack_internal_ap_vld;


    // Module declarations
    obipm_enabler(sc_module_name name);
    SC_HAS_PROCESS(obipm_enabler);

    ~obipm_enabler();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<1> > v_V_fu_205_p3;
    sc_signal< sc_lv<3> > target_ip_V_fu_198_p2;
    sc_signal< sc_lv<5> > p_Result_s_fu_218_p4;
    sc_signal< sc_lv<1> > tmp_45_fu_230_p3;
    sc_signal< sc_lv<3> > tmp_fu_194_p1;
    sc_signal< sc_lv<32> > Hi_assign_fu_214_p1;
    static const bool ap_const_boolean_1;
    static const sc_logic ap_const_logic_0;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<5> ap_const_lv5_11;
    static const sc_lv<32> ap_const_lv32_D;
    // Thread declarations
    void thread_Hi_assign_fu_214_p1();
    void thread_ack_internal();
    void thread_ack_internal_ap_vld();
    void thread_enable_ip();
    void thread_enable_ip_ap_vld();
    void thread_index_ip();
    void thread_index_ip_ap_vld();
    void thread_p_Result_s_fu_218_p4();
    void thread_target_ip_V_fu_198_p2();
    void thread_tmp_45_fu_230_p3();
    void thread_tmp_fu_194_p1();
    void thread_transaction_r();
    void thread_transaction_r_ap_vld();
    void thread_v_V_fu_205_p3();
};

}

using namespace ap_rtl;

#endif
