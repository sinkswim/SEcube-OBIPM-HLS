// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module obipm_enabler (
        row_0_b,
        enable_ip,
        enable_ip_ap_vld,
        transaction_r,
        transaction_r_ap_vld,
        index_ip,
        index_ip_ap_vld,
        ack_internal,
        ack_internal_ap_vld
);

parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv3_7 = 3'b111;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv5_11 = 5'b10001;
parameter    ap_const_lv32_D = 32'b1101;

input  [15:0] row_0_b;
output  [4:0] enable_ip;
output   enable_ip_ap_vld;
output  [0:0] transaction_r;
output   transaction_r_ap_vld;
output  [2:0] index_ip;
output   index_ip_ap_vld;
output  [4:0] ack_internal;
output   ack_internal_ap_vld;

reg[4:0] enable_ip;
reg enable_ip_ap_vld;
reg[4:0] ack_internal;
reg ack_internal_ap_vld;

wire   [0:0] v_V_fu_205_p3;
wire   [2:0] target_ip_V_fu_198_p2;
reg   [4:0] p_Result_s_fu_218_p4;
wire   [0:0] tmp_45_fu_230_p3;
wire   [2:0] tmp_fu_194_p1;
wire   [31:0] Hi_assign_fu_214_p1;

always @ (*) begin
    if ((~(v_V_fu_205_p3 == 1'b0) & ~(1'b0 == tmp_45_fu_230_p3))) begin
        ack_internal = p_Result_s_fu_218_p4;
    end else if (((v_V_fu_205_p3 == 1'b0) | (~(v_V_fu_205_p3 == 1'b0) & (1'b0 == tmp_45_fu_230_p3)))) begin
        ack_internal = ap_const_lv5_0;
    end else begin
        ack_internal = 'bx;
    end
end

always @ (*) begin
    if (((v_V_fu_205_p3 == 1'b0) | (~(v_V_fu_205_p3 == 1'b0) & (1'b0 == tmp_45_fu_230_p3)) | (~(v_V_fu_205_p3 == 1'b0) & ~(1'b0 == tmp_45_fu_230_p3)))) begin
        ack_internal_ap_vld = 1'b1;
    end else begin
        ack_internal_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (~(v_V_fu_205_p3 == 1'b0)) begin
        enable_ip = p_Result_s_fu_218_p4;
    end else if ((v_V_fu_205_p3 == 1'b0)) begin
        enable_ip = ap_const_lv5_0;
    end else begin
        enable_ip = 'bx;
    end
end

always @ (*) begin
    if (((v_V_fu_205_p3 == 1'b0) | ~(v_V_fu_205_p3 == 1'b0))) begin
        enable_ip_ap_vld = 1'b1;
    end else begin
        enable_ip_ap_vld = 1'b0;
    end
end

assign index_ip_ap_vld = 1'b1;

assign transaction_r_ap_vld = 1'b1;

assign Hi_assign_fu_214_p1 = target_ip_V_fu_198_p2;

assign index_ip = target_ip_V_fu_198_p2;

always @ (*) begin
    p_Result_s_fu_218_p4 = ap_const_lv5_0;
    p_Result_s_fu_218_p4[Hi_assign_fu_214_p1] = |(ap_const_lv5_11);
end

assign target_ip_V_fu_198_p2 = ($signed(ap_const_lv3_7) + $signed(tmp_fu_194_p1));

assign tmp_45_fu_230_p3 = row_0_b[ap_const_lv32_D];

assign tmp_fu_194_p1 = row_0_b[2:0];

assign transaction_r = row_0_b[ap_const_lv32_C];

assign v_V_fu_205_p3 = row_0_b[ap_const_lv32_C];

endmodule //obipm_enabler
